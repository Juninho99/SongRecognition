<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\obj\DSP_LiB.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\obj\DSP_LiB.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Wed Sep 28 18:32:45 2022
<BR><P>
<H3>Maximum Stack Usage =       1188 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; FFT &rArr; transform &rArr; ordina &rArr; reverse
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[166]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[5]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">NMI_Handler</a><BR>
 <LI><a href="#[6]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">HardFault_Handler</a><BR>
 <LI><a href="#[7]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">MemManage_Handler</a><BR>
 <LI><a href="#[8]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">BusFault_Handler</a><BR>
 <LI><a href="#[9]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">UsageFault_Handler</a><BR>
 <LI><a href="#[a]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">SVC_Handler</a><BR>
 <LI><a href="#[b]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">DebugMon_Handler</a><BR>
 <LI><a href="#[c]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">PendSV_Handler</a><BR>
 <LI><a href="#[d]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">SysTick_Handler</a><BR>
 <LI><a href="#[5a]">ADC0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5a]">ADC0_IRQHandler</a><BR>
 <LI><a href="#[a7]">brzo_stepenuj</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a7]">brzo_stepenuj</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[5a]">ADC0_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[5b]">ADC1_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[7d]">ADC2_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[35]">BT0_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[72]">BT10_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[73]">BT11_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[74]">BT12_15_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[36]">BT1_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[37]">BT2_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[38]">BT3_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[39]">BT4_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[3a]">BT5_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[3b]">BT6_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[3c]">BT7_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[70]">BT8_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[71]">BT9_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[8]">BusFault_Handler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[5e]">CAN0_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[5f]">CAN1_CANFD_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[e]">CSV_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[61]">DMAC0_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[62]">DMAC1_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[63]">DMAC2_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[64]">DMAC3_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[65]">DMAC4_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[66]">DMAC5_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[67]">DMAC6_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[68]">DMAC7_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[7e]">DSTC_COMP_IRQHandler</a> from dstc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[69]">DSTC_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[3d]">DT1_2_IRAHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[b]">DebugMon_Handler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[82]">Dummy</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[60]">ETHER0_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[19]">EXINT0_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[6a]">EXINT16_17_18_19_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[1a]">EXINT1_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[6b]">EXINT20_21_22_23_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[6c]">EXINT24_25_26_27_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[6d]">EXINT28_29_30_31_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[1b]">EXINT2_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[1c]">EXINT3_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[1d]">EXINT4_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[1e]">EXINT5_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[1f]">EXINT6_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[20]">EXINT7_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[3f]">EXTBUS_ERR_Handler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[43]">EXTINT10_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[44]">EXTINT11_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[45]">EXTINT12_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[46]">EXTINT13_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[47]">EXTINT14_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[48]">EXTINT15_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[41]">EXTINT8_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[42]">EXTINT9_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[85]">FLASHIF_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[26]">FRT0_PEAK_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[27]">FRT0_ZERO_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[2a]">FRT1_PEAK_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[2b]">FRT1_ZERO_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[2e]">FRT2_PEAK_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[2f]">FRT2_ZERO_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[81]">HSSPI_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[6]">HardFault_Handler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[b5]">I2S_HANDLER</a> from loop_intr.o(.text) referenced from loop_intr.o(.text)
 <LI><a href="#[28]">ICU0_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[2c]">ICU1_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[30]">ICU2_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[11]">IRQ003SEL_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[12]">IRQ004SEL_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[13]">IRQ005SEL_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[14]">IRQ006SEL_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[15]">IRQ007SEL_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[16]">IRQ008SEL_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[17]">IRQ009SEL_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[18]">IRQ010SEL_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[10]">LVD_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[4a]">MFS0_RX_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[4b]">MFS0_TX_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[79]">MFS10_RX_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[7a]">MFS10_TX_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[7b]">MFS11_RX_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[7c]">MFS11_TX_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[86]">MFS12_RX_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[87]">MFS12_TX_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[88]">MFS13_RX_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[89]">MFS13_TX_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[8a]">MFS14_RX_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[8b]">MFS14_TX_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[8c]">MFS15_RX_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[8d]">MFS15_TX_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[4c]">MFS1_RX_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[4d]">MFS1_TX_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[4e]">MFS2_RX_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[4f]">MFS2_TX_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[50]">MFS3_RX_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[51]">MFS3_TX_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[52]">MFS4_RX_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[53]">MFS4_TX_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[54]">MFS5_RX_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[55]">MFS5_TX_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[56]">MFS6_RX_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[57]">MFS6_TX_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[58]">MFS7_RX_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[59]">MFS7_TX_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[75]">MFS8_RX_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[76]">MFS8_TX_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[77]">MFS9_RX_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[78]">MFS9_TX_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[7]">MemManage_Handler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[5]">NMI_Handler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[29]">OCU0_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[2d]">OCU1_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[31]">OCU2_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[32]">PPG00_02_04_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[33]">PPG08_10_12_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[34]">PPG16_18_20_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[83]">PRGCRC_I2S_IRQHandler</a> from i2s.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[c]">PendSV_Handler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[21]">QPRC0_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[22]">QPRC1_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[6e]">QPRC2_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[6f]">QPRC3_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[40]">RTC_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[4]">Reset_Handler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[84]">SD_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[a]">SVC_Handler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[f]">SWDT_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[d]">SysTick_Handler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[8e]">SystemInit</a> from system_s6e2cc.o(.text) referenced from startup_s6e2cc.o(.text)
 <LI><a href="#[49]">TIM_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[5d]">USB0_HOST_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[5c]">USB0_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[7f]">USB1_HDMICEC0_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[80]">USB1_HOST_HDMICEC1_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[9]">UsageFault_Handler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[3e]">WC_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[23]">WFG0_DTIF0_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[24]">WFG1_DTIF1_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[25]">WFG2_DTIF2_IRQHandler</a> from startup_s6e2cc.o(.text) referenced from startup_s6e2cc.o(RESET)
 <LI><a href="#[90]">__main</a> from __main.o(!!!main) referenced from startup_s6e2cc.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[90]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[91]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[93]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[18d]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[18e]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[18f]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[190]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[191]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[99]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[94]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[192]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[193]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[194]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[195]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[196]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[197]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[198]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[199]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[19a]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[19b]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[19c]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[19d]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[19e]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[19f]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[1a0]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[1a1]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[1a2]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[1a3]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[1a4]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[1a5]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[9e]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[1a6]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[1a7]"></a>__rt_lib_shutdown_fini_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[1a8]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[1a9]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000011))

<P><STRONG><a name="[1aa]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000012))

<P><STRONG><a name="[1ab]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[1ac]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[1ad]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[92]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[1ae]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[96]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[98]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[1af]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[9a]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 1188 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; FFT &rArr; transform &rArr; ordina &rArr; reverse
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[1b0]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[167]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[9d]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[1b1]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[9f]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[d0]"></a>delay_cycles</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, delay.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>

<P><STRONG><a name="[a2]"></a>log2_moj</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, loop_intr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transform
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverse
</UL>

<P><STRONG><a name="[a1]"></a>reverse</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, loop_intr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = reverse
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log2_moj
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ordina
</UL>

<P><STRONG><a name="[a3]"></a>ordina</STRONG> (Thumb, 98 bytes, Stack size 1044 bytes, loop_intr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1060<LI>Call Chain = ordina &rArr; reverse
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverse
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transform
</UL>

<P><STRONG><a name="[a4]"></a>polar</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, loop_intr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = polar
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_sin_f32
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_cos_f32
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transform
</UL>

<P><STRONG><a name="[a8]"></a>pomnozi_complex</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, loop_intr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transform
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brzo_stepenuj
</UL>

<P><STRONG><a name="[a7]"></a>brzo_stepenuj</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, loop_intr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = brzo_stepenuj &rArr;  brzo_stepenuj (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brzo_stepenuj
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pomnozi_complex
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transform
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brzo_stepenuj
</UL>

<P><STRONG><a name="[a9]"></a>transform</STRONG> (Thumb, 326 bytes, Stack size 32 bytes, loop_intr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1092<LI>Call Chain = transform &rArr; ordina &rArr; reverse
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brzo_stepenuj
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pomnozi_complex
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;polar
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ordina
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log2_moj
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT
</UL>

<P><STRONG><a name="[ad]"></a>FFT</STRONG> (Thumb, 552 bytes, Stack size 72 bytes, loop_intr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1164<LI>Call Chain = FFT &rArr; transform &rArr; ordina &rArr; reverse
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transform
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b0]"></a>NormalizationFactor</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, loop_intr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = NormalizationFactor &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCoefficient
</UL>

<P><STRONG><a name="[b1]"></a>GetCoefficient</STRONG> (Thumb, 256 bytes, Stack size 64 bytes, loop_intr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GetCoefficient &rArr; __hardfp_log &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_cos_f32
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NormalizationFactor
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b5]"></a>I2S_HANDLER</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, loop_intr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = I2S_HANDLER &rArr; arm_fir_f32
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2s_tx
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2s_rx
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fir_f32
</UL>
<BR>[Address Reference Count : 1]<UL><LI> loop_intr.o(.text)
</UL>
<P><STRONG><a name="[9b]"></a>main</STRONG> (Thumb, 1598 bytes, Stack size 24 bytes, loop_intr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1188<LI>Call Chain = main &rArr; FFT &rArr; transform &rArr; ordina &rArr; reverse
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_mode
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_init
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_max_f32
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fir_init_f32
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_correlate_f32
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCoefficient
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[bf]"></a>init_LED</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, audio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_mode
</UL>

<P><STRONG><a name="[1b2]"></a>prbs</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, audio.o(.text), UNUSED)

<P><STRONG><a name="[c0]"></a>Codec_WriteRegister</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Codec_WriteRegister &rArr; i2c_write &rArr; i2c_stop &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_write
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_init
</UL>

<P><STRONG><a name="[bb]"></a>audio_init</STRONG> (Thumb, 230 bytes, Stack size 24 bytes, audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = audio_init &rArr; Codec_WriteRegister &rArr; i2c_write &rArr; i2c_stop &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2s_tx_threshold
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2s_tx_enable
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2s_tx_dma_enable
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2s_start
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2s_set_callback
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2s_rx_threshold
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2s_rx_enable
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2s_rx_dma_enable
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2s_init
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_init
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dstc_set_callback
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dstc_init
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Codec_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c1]"></a>delay_ms</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, delay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_cycles
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_write
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Codec_WriteRegister
</UL>

<P><STRONG><a name="[c4]"></a>delay_us</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, delay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_cycles
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_stop
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_init
</UL>

<P><STRONG><a name="[ba]"></a>gpio_set_mode</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gpio_set_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_LED
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1b3]"></a>gpio_toggle</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[bc]"></a>gpio_set</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1b4]"></a>gpio_get</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[1b5]"></a>gpio_set_range</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[1b6]"></a>gpio_set_trigger</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[1b7]"></a>gpio_set_callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[1b8]"></a>port_isr</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[1b9]"></a>port_isr0</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[1ba]"></a>port_isr1</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[1bb]"></a>port_isr2</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[1bc]"></a>port_isr3</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[1bd]"></a>port_isr4</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[c3]"></a>i2c_init</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_init
</UL>

<P><STRONG><a name="[1be]"></a>i2c_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, i2c.o(.text), UNUSED)

<P><STRONG><a name="[1bf]"></a>i2c_disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, i2c.o(.text), UNUSED)

<P><STRONG><a name="[d2]"></a>i2c_start</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_write
</UL>

<P><STRONG><a name="[d1]"></a>i2c_stop</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = i2c_stop &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_write
</UL>

<P><STRONG><a name="[1c0]"></a>i2c_tx</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, i2c.o(.text), UNUSED)

<P><STRONG><a name="[1c1]"></a>i2c_rx</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, i2c.o(.text), UNUSED)

<P><STRONG><a name="[1c2]"></a>i2c_ack</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, i2c.o(.text), UNUSED)

<P><STRONG><a name="[c2]"></a>i2c_write</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = i2c_write &rArr; i2c_stop &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_stop
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_start
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Codec_WriteRegister
</UL>

<P><STRONG><a name="[1c3]"></a>i2c_read</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, i2c.o(.text), UNUSED)

<P><STRONG><a name="[c5]"></a>i2s_init</STRONG> (Thumb, 442 bytes, Stack size 12 bytes, i2s.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = i2s_init
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_init
</UL>

<P><STRONG><a name="[c9]"></a>i2s_rx_enable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, i2s.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_init
</UL>

<P><STRONG><a name="[c8]"></a>i2s_tx_enable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, i2s.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_init
</UL>

<P><STRONG><a name="[c6]"></a>i2s_rx_threshold</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, i2s.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_init
</UL>

<P><STRONG><a name="[c7]"></a>i2s_tx_threshold</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, i2s.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_init
</UL>

<P><STRONG><a name="[ce]"></a>i2s_rx_dma_enable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, i2s.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_init
</UL>

<P><STRONG><a name="[cf]"></a>i2s_tx_dma_enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, i2s.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_init
</UL>

<P><STRONG><a name="[cb]"></a>i2s_start</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, i2s.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_init
</UL>

<P><STRONG><a name="[1c4]"></a>i2s_stop</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, i2s.o(.text), UNUSED)

<P><STRONG><a name="[b6]"></a>i2s_rx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, i2s.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_HANDLER
</UL>

<P><STRONG><a name="[b8]"></a>i2s_tx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, i2s.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_HANDLER
</UL>

<P><STRONG><a name="[ca]"></a>i2s_set_callback</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, i2s.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = i2s_set_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_init
</UL>

<P><STRONG><a name="[83]"></a>PRGCRC_I2S_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, i2s.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PRGCRC_I2S_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[1c5]"></a>dstc_src_memory</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dstc.o(.text), UNUSED)

<P><STRONG><a name="[1c6]"></a>dstc_dest_memory</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dstc.o(.text), UNUSED)

<P><STRONG><a name="[1c7]"></a>dstc_transfersize</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, dstc.o(.text), UNUSED)

<P><STRONG><a name="[d4]"></a>DSTCPchkCalc</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, dstc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dstc_init
</UL>

<P><STRONG><a name="[cc]"></a>dstc_init</STRONG> (Thumb, 294 bytes, Stack size 16 bytes, dstc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dstc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSTCPchkCalc
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_init
</UL>

<P><STRONG><a name="[1c8]"></a>dstc_state</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, dstc.o(.text), UNUSED)

<P><STRONG><a name="[d5]"></a>dstc_reset</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, dstc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>

<P><STRONG><a name="[cd]"></a>dstc_set_callback</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, dstc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dstc_set_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;audio_init
</UL>

<P><STRONG><a name="[7e]"></a>DSTC_COMP_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dstc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[1c9]"></a>arm_abs_f32</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[d7]"></a>arm_abs_f64</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, basicmathfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
</UL>

<P><STRONG><a name="[ed]"></a>arm_abs_q15</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, basicmathfunctions.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_divide_q15
</UL>

<P><STRONG><a name="[ef]"></a>arm_abs_q31</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, basicmathfunctions.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_divide_q31
</UL>

<P><STRONG><a name="[1ca]"></a>arm_abs_q7</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[132]"></a>arm_add_f32</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, basicmathfunctions.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_logsumexp_dot_prod_f32
</UL>

<P><STRONG><a name="[d9]"></a>arm_add_f64</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, basicmathfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[1cb]"></a>arm_add_q15</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1cc]"></a>arm_add_q31</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1cd]"></a>arm_add_q7</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1ce]"></a>arm_and_u16</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1cf]"></a>arm_and_u32</STRONG> (Thumb, 20 bytes, Stack size 12 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1d0]"></a>arm_and_u8</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1d1]"></a>arm_dot_prod_f32</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[db]"></a>arm_dot_prod_f64</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, basicmathfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[1d2]"></a>arm_dot_prod_q15</STRONG> (Thumb, 32 bytes, Stack size 20 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1d3]"></a>arm_dot_prod_q31</STRONG> (Thumb, 42 bytes, Stack size 20 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1d4]"></a>arm_dot_prod_q7</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1d5]"></a>arm_mult_f32</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[dc]"></a>arm_mult_f64</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, basicmathfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>

<P><STRONG><a name="[1d6]"></a>arm_mult_q15</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1d7]"></a>arm_mult_q31</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1d8]"></a>arm_mult_q7</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1d9]"></a>arm_negate_f32</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[dd]"></a>arm_negate_f64</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, basicmathfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
</UL>

<P><STRONG><a name="[f5]"></a>arm_negate_q15</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, basicmathfunctions.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_atan2_q15
</UL>

<P><STRONG><a name="[f3]"></a>arm_negate_q31</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, basicmathfunctions.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_atan2_q31
</UL>

<P><STRONG><a name="[1da]"></a>arm_negate_q7</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1db]"></a>arm_not_u16</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1dc]"></a>arm_not_u32</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1dd]"></a>arm_not_u8</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1de]"></a>arm_offset_f32</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[df]"></a>arm_offset_f64</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, basicmathfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[1df]"></a>arm_offset_q15</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1e0]"></a>arm_offset_q31</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1e1]"></a>arm_offset_q7</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1e2]"></a>arm_or_u16</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1e3]"></a>arm_or_u32</STRONG> (Thumb, 20 bytes, Stack size 12 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1e4]"></a>arm_or_u8</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1e5]"></a>arm_scale_f32</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[e0]"></a>arm_scale_f64</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, basicmathfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>

<P><STRONG><a name="[1e6]"></a>arm_scale_q15</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1e7]"></a>arm_scale_q31</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1e8]"></a>arm_scale_q7</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[f6]"></a>arm_shift_q15</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, basicmathfunctions.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_atan2_q15
</UL>

<P><STRONG><a name="[e1]"></a>arm_shift_q31</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, basicmathfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_atan2_q31
</UL>

<P><STRONG><a name="[1e9]"></a>arm_shift_q7</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1ea]"></a>arm_sub_f32</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[e3]"></a>arm_sub_f64</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, basicmathfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>

<P><STRONG><a name="[1eb]"></a>arm_sub_q15</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1ec]"></a>arm_sub_q31</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1ed]"></a>arm_sub_q7</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1ee]"></a>arm_xor_u16</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1ef]"></a>arm_xor_u32</STRONG> (Thumb, 20 bytes, Stack size 12 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1f0]"></a>arm_xor_u8</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1f1]"></a>arm_clip_f32</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1f2]"></a>arm_clip_q31</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1f3]"></a>arm_clip_q15</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1f4]"></a>arm_clip_q7</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, basicmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[a5]"></a>arm_cos_f32</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, fastmathfunctions.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCoefficient
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;polar
</UL>

<P><STRONG><a name="[1f5]"></a>arm_cos_q15</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, fastmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1f6]"></a>arm_cos_q31</STRONG> (Thumb, 60 bytes, Stack size 20 bytes, fastmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[a6]"></a>arm_sin_f32</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, fastmathfunctions.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;polar
</UL>

<P><STRONG><a name="[1f7]"></a>arm_sin_q15</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, fastmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1f8]"></a>arm_sin_q31</STRONG> (Thumb, 58 bytes, Stack size 20 bytes, fastmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[140]"></a>arm_sqrt_q31</STRONG> (Thumb, 182 bytes, Stack size 16 bytes, fastmathfunctions.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_std_q31
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_rms_q31
</UL>

<P><STRONG><a name="[13d]"></a>arm_sqrt_q15</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, fastmathfunctions.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_std_q15
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_rms_q15
</UL>

<P><STRONG><a name="[e5]"></a>arm_vexp_f32</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, fastmathfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_expf
</UL>

<P><STRONG><a name="[e7]"></a>arm_vexp_f64</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, fastmathfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
</UL>

<P><STRONG><a name="[e9]"></a>arm_vlog_f32</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, fastmathfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_logf
</UL>

<P><STRONG><a name="[eb]"></a>arm_vlog_f64</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, fastmathfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
</UL>

<P><STRONG><a name="[ec]"></a>arm_divide_q15</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, fastmathfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_abs_q15
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_levinson_durbin_q31
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_atan2_q15
</UL>

<P><STRONG><a name="[ee]"></a>arm_divide_q31</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, fastmathfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_abs_q31
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_atan2_q31
</UL>

<P><STRONG><a name="[1f9]"></a>arm_vlog_q31</STRONG> (Thumb, 88 bytes, Stack size 20 bytes, fastmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1fa]"></a>arm_vlog_q15</STRONG> (Thumb, 96 bytes, Stack size 20 bytes, fastmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1fb]"></a>arm_atan2_f32</STRONG> (Thumb, 512 bytes, Stack size 8 bytes, fastmathfunctions.o(.text), UNUSED)

<P><STRONG><a name="[f2]"></a>arm_atan2_q31</STRONG> (Thumb, 978 bytes, Stack size 56 bytes, fastmathfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_shift_q31
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_negate_q31
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_divide_q31
</UL>

<P><STRONG><a name="[f4]"></a>arm_atan2_q15</STRONG> (Thumb, 762 bytes, Stack size 64 bytes, fastmathfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_shift_q15
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_negate_q15
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_divide_q15
</UL>

<P><STRONG><a name="[f7]"></a>arm_biquad_cas_df1_32x64_init_q31</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[f9]"></a>arm_biquad_cas_df1_32x64_q31</STRONG> (Thumb, 328 bytes, Stack size 152 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>

<P><STRONG><a name="[1fc]"></a>arm_biquad_cascade_df1_f32</STRONG> (Thumb, 130 bytes, Stack size 20 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1fd]"></a>arm_biquad_cascade_df1_fast_q15</STRONG> (Thumb, 180 bytes, Stack size 56 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[1fe]"></a>arm_biquad_cascade_df1_fast_q31</STRONG> (Thumb, 146 bytes, Stack size 72 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[fa]"></a>arm_biquad_cascade_df1_init_f32</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[fb]"></a>arm_biquad_cascade_df1_init_q15</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[fd]"></a>arm_biquad_cascade_df1_init_q31</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[1ff]"></a>arm_biquad_cascade_df1_q15</STRONG> (Thumb, 320 bytes, Stack size 68 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[fe]"></a>arm_biquad_cascade_df1_q31</STRONG> (Thumb, 174 bytes, Stack size 128 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
</UL>

<P><STRONG><a name="[200]"></a>arm_biquad_cascade_df2T_f32</STRONG> (Thumb, 98 bytes, Stack size 20 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[ff]"></a>arm_biquad_cascade_df2T_f64</STRONG> (Thumb, 222 bytes, Stack size 112 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[100]"></a>arm_biquad_cascade_df2T_init_f32</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[101]"></a>arm_biquad_cascade_df2T_init_f64</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[201]"></a>arm_biquad_cascade_stereo_df2T_f32</STRONG> (Thumb, 150 bytes, Stack size 20 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[102]"></a>arm_biquad_cascade_stereo_df2T_init_f32</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[202]"></a>arm_conv_f32</STRONG> (Thumb, 300 bytes, Stack size 36 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[103]"></a>arm_conv_fast_opt_q15</STRONG> (Thumb, 194 bytes, Stack size 32 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fill_q15
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_copy_q15
</UL>

<P><STRONG><a name="[203]"></a>arm_conv_fast_q15</STRONG> (Thumb, 1076 bytes, Stack size 132 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[204]"></a>arm_conv_fast_q31</STRONG> (Thumb, 814 bytes, Stack size 132 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[106]"></a>arm_conv_opt_q15</STRONG> (Thumb, 192 bytes, Stack size 32 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fill_q15
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_copy_q15
</UL>

<P><STRONG><a name="[107]"></a>arm_conv_opt_q7</STRONG> (Thumb, 628 bytes, Stack size 72 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fill_q15
</UL>

<P><STRONG><a name="[205]"></a>arm_conv_partial_f32</STRONG> (Thumb, 432 bytes, Stack size 40 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[108]"></a>arm_conv_partial_fast_opt_q15</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fill_q15
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_copy_q15
</UL>

<P><STRONG><a name="[206]"></a>arm_conv_partial_fast_q15</STRONG> (Thumb, 1290 bytes, Stack size 120 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[207]"></a>arm_conv_partial_fast_q31</STRONG> (Thumb, 422 bytes, Stack size 52 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[109]"></a>arm_conv_partial_opt_q15</STRONG> (Thumb, 240 bytes, Stack size 40 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fill_q15
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_copy_q15
</UL>

<P><STRONG><a name="[10a]"></a>arm_conv_partial_opt_q7</STRONG> (Thumb, 660 bytes, Stack size 104 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fill_q15
</UL>

<P><STRONG><a name="[208]"></a>arm_conv_partial_q15</STRONG> (Thumb, 1542 bytes, Stack size 152 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[209]"></a>arm_conv_partial_q31</STRONG> (Thumb, 496 bytes, Stack size 52 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[20a]"></a>arm_conv_partial_q7</STRONG> (Thumb, 426 bytes, Stack size 52 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[20b]"></a>arm_conv_q15</STRONG> (Thumb, 1366 bytes, Stack size 156 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[20c]"></a>arm_conv_q31</STRONG> (Thumb, 352 bytes, Stack size 48 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[20d]"></a>arm_conv_q7</STRONG> (Thumb, 296 bytes, Stack size 44 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[bd]"></a>arm_correlate_f32</STRONG> (Thumb, 336 bytes, Stack size 36 bytes, filteringfunctions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = arm_correlate_f32
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10b]"></a>arm_correlate_f64</STRONG> (Thumb, 500 bytes, Stack size 80 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[10c]"></a>arm_correlate_fast_opt_q15</STRONG> (Thumb, 202 bytes, Stack size 40 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fill_q15
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_copy_q15
</UL>

<P><STRONG><a name="[20e]"></a>arm_correlate_fast_q15</STRONG> (Thumb, 1004 bytes, Stack size 140 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[20f]"></a>arm_correlate_fast_q31</STRONG> (Thumb, 856 bytes, Stack size 116 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[10d]"></a>arm_correlate_opt_q15</STRONG> (Thumb, 210 bytes, Stack size 40 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fill_q15
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_copy_q15
</UL>

<P><STRONG><a name="[10e]"></a>arm_correlate_opt_q7</STRONG> (Thumb, 636 bytes, Stack size 112 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fill_q15
</UL>

<P><STRONG><a name="[210]"></a>arm_correlate_q15</STRONG> (Thumb, 1268 bytes, Stack size 164 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[211]"></a>arm_correlate_q31</STRONG> (Thumb, 396 bytes, Stack size 52 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[212]"></a>arm_correlate_q7</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[213]"></a>arm_fir_decimate_f32</STRONG> (Thumb, 116 bytes, Stack size 28 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[214]"></a>arm_fir_decimate_fast_q15</STRONG> (Thumb, 326 bytes, Stack size 116 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[215]"></a>arm_fir_decimate_fast_q31</STRONG> (Thumb, 110 bytes, Stack size 36 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[10f]"></a>arm_fir_decimate_init_f32</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[110]"></a>arm_fir_decimate_init_q15</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[111]"></a>arm_fir_decimate_init_q31</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[216]"></a>arm_fir_decimate_q15</STRONG> (Thumb, 376 bytes, Stack size 136 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[217]"></a>arm_fir_decimate_q31</STRONG> (Thumb, 130 bytes, Stack size 56 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[b7]"></a>arm_fir_f32</STRONG> (Thumb, 98 bytes, Stack size 28 bytes, filteringfunctions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = arm_fir_f32
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_HANDLER
</UL>

<P><STRONG><a name="[112]"></a>arm_fir_f64</STRONG> (Thumb, 164 bytes, Stack size 64 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[218]"></a>arm_fir_fast_q15</STRONG> (Thumb, 108 bytes, Stack size 36 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[219]"></a>arm_fir_fast_q31</STRONG> (Thumb, 90 bytes, Stack size 36 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[b9]"></a>arm_fir_init_f32</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, filteringfunctions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = arm_fir_init_f32 &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[113]"></a>arm_fir_init_f64</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[114]"></a>arm_fir_init_q15</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[115]"></a>arm_fir_init_q31</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[116]"></a>arm_fir_init_q7</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[21a]"></a>arm_fir_interpolate_f32</STRONG> (Thumb, 134 bytes, Stack size 36 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[117]"></a>arm_fir_interpolate_init_f32</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[118]"></a>arm_fir_interpolate_init_q15</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[119]"></a>arm_fir_interpolate_init_q31</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[21b]"></a>arm_fir_interpolate_q15</STRONG> (Thumb, 180 bytes, Stack size 60 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[21c]"></a>arm_fir_interpolate_q31</STRONG> (Thumb, 178 bytes, Stack size 60 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[21d]"></a>arm_fir_lattice_f32</STRONG> (Thumb, 102 bytes, Stack size 20 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[11a]"></a>arm_fir_lattice_init_f32</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[11b]"></a>arm_fir_lattice_init_q15</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[11c]"></a>arm_fir_lattice_init_q31</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[21e]"></a>arm_fir_lattice_q15</STRONG> (Thumb, 130 bytes, Stack size 36 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[21f]"></a>arm_fir_lattice_q31</STRONG> (Thumb, 104 bytes, Stack size 36 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[220]"></a>arm_fir_q15</STRONG> (Thumb, 134 bytes, Stack size 52 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[221]"></a>arm_fir_q31</STRONG> (Thumb, 116 bytes, Stack size 40 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[222]"></a>arm_fir_q7</STRONG> (Thumb, 98 bytes, Stack size 36 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[223]"></a>arm_fir_sparse_f32</STRONG> (Thumb, 444 bytes, Stack size 64 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[11d]"></a>arm_fir_sparse_init_f32</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[11e]"></a>arm_fir_sparse_init_q15</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[11f]"></a>arm_fir_sparse_init_q31</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[120]"></a>arm_fir_sparse_init_q7</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[224]"></a>arm_fir_sparse_q15</STRONG> (Thumb, 506 bytes, Stack size 64 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[225]"></a>arm_fir_sparse_q31</STRONG> (Thumb, 490 bytes, Stack size 60 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[226]"></a>arm_fir_sparse_q7</STRONG> (Thumb, 500 bytes, Stack size 112 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[227]"></a>arm_iir_lattice_f32</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[121]"></a>arm_iir_lattice_init_f32</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[122]"></a>arm_iir_lattice_init_q15</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[123]"></a>arm_iir_lattice_init_q31</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[228]"></a>arm_iir_lattice_q15</STRONG> (Thumb, 232 bytes, Stack size 60 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[229]"></a>arm_iir_lattice_q31</STRONG> (Thumb, 230 bytes, Stack size 64 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[22a]"></a>arm_lms_f32</STRONG> (Thumb, 158 bytes, Stack size 36 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[124]"></a>arm_lms_init_f32</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[125]"></a>arm_lms_init_q15</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[126]"></a>arm_lms_init_q31</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[22b]"></a>arm_lms_norm_f32</STRONG> (Thumb, 202 bytes, Stack size 36 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[127]"></a>arm_lms_norm_init_f32</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[128]"></a>arm_lms_norm_init_q15</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[129]"></a>arm_lms_norm_init_q31</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[22c]"></a>arm_lms_norm_q15</STRONG> (Thumb, 354 bytes, Stack size 76 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[12a]"></a>arm_lms_norm_q31</STRONG> (Thumb, 450 bytes, Stack size 80 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
</UL>

<P><STRONG><a name="[22d]"></a>arm_lms_q15</STRONG> (Thumb, 216 bytes, Stack size 64 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[22e]"></a>arm_lms_q31</STRONG> (Thumb, 240 bytes, Stack size 68 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[22f]"></a>arm_levinson_durbin_f32</STRONG> (Thumb, 232 bytes, Stack size 20 bytes, filteringfunctions.o(.text), UNUSED)

<P><STRONG><a name="[12b]"></a>arm_levinson_durbin_q31</STRONG> (Thumb, 390 bytes, Stack size 64 bytes, filteringfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_divide_q15
</UL>

<P><STRONG><a name="[12c]"></a>arm_entropy_f32</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, statisticsfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_logf
</UL>

<P><STRONG><a name="[12d]"></a>arm_entropy_f64</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, statisticsfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
</UL>

<P><STRONG><a name="[12e]"></a>arm_kullback_leibler_f32</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, statisticsfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_logf
</UL>

<P><STRONG><a name="[12f]"></a>arm_kullback_leibler_f64</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, statisticsfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
</UL>

<P><STRONG><a name="[130]"></a>arm_logsumexp_f32</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, statisticsfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_logf
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_expf
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_logsumexp_dot_prod_f32
</UL>

<P><STRONG><a name="[131]"></a>arm_logsumexp_dot_prod_f32</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, statisticsfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_add_f32
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_logsumexp_f32
</UL>

<P><STRONG><a name="[be]"></a>arm_max_f32</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, statisticsfunctions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = arm_max_f32
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[133]"></a>arm_max_f64</STRONG> (Thumb, 76 bytes, Stack size 48 bytes, statisticsfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>

<P><STRONG><a name="[230]"></a>arm_max_q15</STRONG> (Thumb, 38 bytes, Stack size 20 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[231]"></a>arm_max_q31</STRONG> (Thumb, 32 bytes, Stack size 20 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[232]"></a>arm_max_q7</STRONG> (Thumb, 36 bytes, Stack size 20 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[233]"></a>arm_max_no_idx_f32</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[135]"></a>arm_max_no_idx_f64</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, statisticsfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>

<P><STRONG><a name="[234]"></a>arm_max_no_idx_q31</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[235]"></a>arm_max_no_idx_q15</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[236]"></a>arm_max_no_idx_q7</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[237]"></a>arm_mean_f32</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[136]"></a>arm_mean_f64</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, statisticsfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[238]"></a>arm_mean_q15</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[137]"></a>arm_mean_q31</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, statisticsfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>

<P><STRONG><a name="[239]"></a>arm_mean_q7</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[23a]"></a>arm_min_f32</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[138]"></a>arm_min_f64</STRONG> (Thumb, 70 bytes, Stack size 48 bytes, statisticsfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>

<P><STRONG><a name="[23b]"></a>arm_min_q15</STRONG> (Thumb, 36 bytes, Stack size 20 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[23c]"></a>arm_min_q31</STRONG> (Thumb, 32 bytes, Stack size 20 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[23d]"></a>arm_min_q7</STRONG> (Thumb, 36 bytes, Stack size 20 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[23e]"></a>arm_min_no_idx_f32</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[13a]"></a>arm_min_no_idx_f64</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, statisticsfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>

<P><STRONG><a name="[23f]"></a>arm_min_no_idx_q31</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[240]"></a>arm_min_no_idx_q15</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[241]"></a>arm_min_no_idx_q7</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[242]"></a>arm_power_f32</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[13b]"></a>arm_power_f64</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, statisticsfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[243]"></a>arm_power_q15</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[244]"></a>arm_power_q31</STRONG> (Thumb, 40 bytes, Stack size 20 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[245]"></a>arm_power_q7</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[246]"></a>arm_rms_f32</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[13c]"></a>arm_rms_q15</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, statisticsfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_sqrt_q15
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>

<P><STRONG><a name="[13e]"></a>arm_rms_q31</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, statisticsfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_sqrt_q31
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[142]"></a>arm_var_f32</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, statisticsfunctions.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_std_f32
</UL>

<P><STRONG><a name="[141]"></a>arm_std_f32</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, statisticsfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_var_f32
</UL>

<P><STRONG><a name="[143]"></a>arm_var_f64</STRONG> (Thumb, 198 bytes, Stack size 40 bytes, statisticsfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_std_f64
</UL>

<P><STRONG><a name="[144]"></a>arm_std_f64</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, statisticsfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_var_f64
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>

<P><STRONG><a name="[145]"></a>arm_std_q15</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, statisticsfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_sqrt_q15
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>

<P><STRONG><a name="[146]"></a>arm_std_q31</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, statisticsfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_sqrt_q31
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>

<P><STRONG><a name="[147]"></a>arm_var_q15</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, statisticsfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>

<P><STRONG><a name="[148]"></a>arm_var_q31</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, statisticsfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>

<P><STRONG><a name="[247]"></a>arm_absmax_f32</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[149]"></a>arm_absmax_f64</STRONG> (Thumb, 94 bytes, Stack size 48 bytes, statisticsfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>

<P><STRONG><a name="[248]"></a>arm_absmax_q15</STRONG> (Thumb, 182 bytes, Stack size 28 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[249]"></a>arm_absmax_q31</STRONG> (Thumb, 154 bytes, Stack size 28 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[24a]"></a>arm_absmax_q7</STRONG> (Thumb, 180 bytes, Stack size 28 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[24b]"></a>arm_absmin_f32</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[14a]"></a>arm_absmin_f64</STRONG> (Thumb, 94 bytes, Stack size 48 bytes, statisticsfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>

<P><STRONG><a name="[24c]"></a>arm_absmin_q15</STRONG> (Thumb, 180 bytes, Stack size 28 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[24d]"></a>arm_absmin_q31</STRONG> (Thumb, 154 bytes, Stack size 28 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[24e]"></a>arm_absmin_q7</STRONG> (Thumb, 182 bytes, Stack size 28 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[24f]"></a>arm_absmax_no_idx_f32</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[14b]"></a>arm_absmax_no_idx_f64</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, statisticsfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>

<P><STRONG><a name="[250]"></a>arm_absmax_no_idx_q15</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[251]"></a>arm_absmax_no_idx_q31</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[252]"></a>arm_absmax_no_idx_q7</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[253]"></a>arm_absmin_no_idx_f32</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[14c]"></a>arm_absmin_no_idx_f64</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, statisticsfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>

<P><STRONG><a name="[254]"></a>arm_absmin_no_idx_q15</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[255]"></a>arm_absmin_no_idx_q31</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[256]"></a>arm_absmin_no_idx_q7</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[257]"></a>arm_mse_q7</STRONG> (Thumb, 54 bytes, Stack size 20 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[14d]"></a>arm_mse_q15</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, statisticsfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>

<P><STRONG><a name="[14e]"></a>arm_mse_q31</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, statisticsfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>

<P><STRONG><a name="[258]"></a>arm_mse_f32</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, statisticsfunctions.o(.text), UNUSED)

<P><STRONG><a name="[14f]"></a>arm_mse_f64</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, statisticsfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[259]"></a>arm_barycenter_f32</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, supportfunctions.o(.text), UNUSED)

<P><STRONG><a name="[150]"></a>arm_bitonic_sort_f32</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, supportfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_bitonic_sort_core_f32
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_sort_f32
</UL>

<P><STRONG><a name="[153]"></a>arm_bubble_sort_f32</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, supportfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_sort_f32
</UL>

<P><STRONG><a name="[25a]"></a>arm_copy_f32</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, supportfunctions.o(.text), UNUSED)

<P><STRONG><a name="[25b]"></a>arm_copy_f64</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, supportfunctions.o(.text), UNUSED)

<P><STRONG><a name="[105]"></a>arm_copy_q15</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, supportfunctions.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_correlate_opt_q15
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_correlate_fast_opt_q15
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_conv_partial_opt_q15
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_conv_partial_fast_opt_q15
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_conv_opt_q15
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_conv_fast_opt_q15
</UL>

<P><STRONG><a name="[25c]"></a>arm_copy_q31</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, supportfunctions.o(.text), UNUSED)

<P><STRONG><a name="[25d]"></a>arm_copy_q7</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, supportfunctions.o(.text), UNUSED)

<P><STRONG><a name="[25e]"></a>arm_fill_f32</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, supportfunctions.o(.text), UNUSED)

<P><STRONG><a name="[25f]"></a>arm_fill_f64</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, supportfunctions.o(.text), UNUSED)

<P><STRONG><a name="[104]"></a>arm_fill_q15</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, supportfunctions.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_correlate_opt_q7
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_correlate_opt_q15
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_correlate_fast_opt_q15
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_conv_partial_opt_q7
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_conv_partial_opt_q15
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_conv_partial_fast_opt_q15
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_conv_opt_q7
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_conv_opt_q15
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_conv_fast_opt_q15
</UL>

<P><STRONG><a name="[260]"></a>arm_fill_q31</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, supportfunctions.o(.text), UNUSED)

<P><STRONG><a name="[261]"></a>arm_fill_q7</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, supportfunctions.o(.text), UNUSED)

<P><STRONG><a name="[155]"></a>arm_heap_sort_f32</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, supportfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_heapify
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_sort_f32
</UL>

<P><STRONG><a name="[156]"></a>arm_insertion_sort_f32</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, supportfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_sort_f32
</UL>

<P><STRONG><a name="[158]"></a>arm_merge_sort_f32</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, supportfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_merge_sort_core_f32
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[262]"></a>arm_merge_sort_init_f32</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, supportfunctions.o(.text), UNUSED)

<P><STRONG><a name="[15a]"></a>arm_quick_sort_f32</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, supportfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_quick_sort_core_f32
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_sort_f32
</UL>

<P><STRONG><a name="[15b]"></a>arm_selection_sort_f32</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, supportfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_sort_f32
</UL>

<P><STRONG><a name="[15c]"></a>arm_sort_f32</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, supportfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_selection_sort_f32
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_quick_sort_f32
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_insertion_sort_f32
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_heap_sort_f32
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_bubble_sort_f32
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_bitonic_sort_f32
</UL>

<P><STRONG><a name="[263]"></a>arm_sort_init_f32</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, supportfunctions.o(.text), UNUSED)

<P><STRONG><a name="[264]"></a>arm_weighted_sum_f32</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, supportfunctions.o(.text), UNUSED)

<P><STRONG><a name="[265]"></a>arm_float_to_q15</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, supportfunctions.o(.text), UNUSED)

<P><STRONG><a name="[15d]"></a>arm_float_to_q31</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, supportfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2lz
</UL>

<P><STRONG><a name="[266]"></a>arm_float_to_q7</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, supportfunctions.o(.text), UNUSED)

<P><STRONG><a name="[267]"></a>arm_q15_to_float</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, supportfunctions.o(.text), UNUSED)

<P><STRONG><a name="[268]"></a>arm_q15_to_q31</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, supportfunctions.o(.text), UNUSED)

<P><STRONG><a name="[269]"></a>arm_q15_to_q7</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, supportfunctions.o(.text), UNUSED)

<P><STRONG><a name="[26a]"></a>arm_q31_to_float</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, supportfunctions.o(.text), UNUSED)

<P><STRONG><a name="[26b]"></a>arm_q31_to_q15</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, supportfunctions.o(.text), UNUSED)

<P><STRONG><a name="[26c]"></a>arm_q31_to_q7</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, supportfunctions.o(.text), UNUSED)

<P><STRONG><a name="[26d]"></a>arm_q7_to_float</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, supportfunctions.o(.text), UNUSED)

<P><STRONG><a name="[26e]"></a>arm_q7_to_q15</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, supportfunctions.o(.text), UNUSED)

<P><STRONG><a name="[26f]"></a>arm_q7_to_q31</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, supportfunctions.o(.text), UNUSED)

<P><STRONG><a name="[4]"></a>Reset_Handler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>ADC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>ADC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>BT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>BT10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>BT11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>BT12_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>BT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>BT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>BT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>BT4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>BT5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>BT6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>BT7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>BT8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>BT9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>CAN0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>CAN1_CANFD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>CSV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>DMAC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>DMAC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>DMAC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>DMAC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>DMAC4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>DMAC5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>DMAC6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>DMAC7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>DSTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>DT1_2_IRAHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>Dummy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>ETHER0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>EXINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>EXINT16_17_18_19_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>EXINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>EXINT20_21_22_23_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>EXINT24_25_26_27_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>EXINT28_29_30_31_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>EXINT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>EXINT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>EXINT4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>EXINT5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>EXINT6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>EXINT7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>EXTBUS_ERR_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>EXTINT10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>EXTINT11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>EXTINT12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>EXTINT13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>EXTINT14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>EXTINT15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>EXTINT8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>EXTINT9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>FLASHIF_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>FRT0_PEAK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>FRT0_ZERO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>FRT1_PEAK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>FRT1_ZERO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>FRT2_PEAK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>FRT2_ZERO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>HSSPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>ICU0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>ICU1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>ICU2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>IRQ003SEL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>IRQ004SEL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>IRQ005SEL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>IRQ006SEL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>IRQ007SEL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>IRQ008SEL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>IRQ009SEL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>IRQ010SEL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>LVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>MFS0_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>MFS0_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>MFS10_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>MFS10_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>MFS11_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>MFS11_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>MFS12_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>MFS12_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>MFS13_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>MFS13_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>MFS14_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>MFS14_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[8c]"></a>MFS15_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>MFS15_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>MFS1_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>MFS1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>MFS2_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>MFS2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>MFS3_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>MFS3_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>MFS4_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>MFS4_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>MFS5_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>MFS5_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>MFS6_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>MFS6_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>MFS7_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>MFS7_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>MFS8_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>MFS8_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>MFS9_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>MFS9_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>OCU0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>OCU1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>OCU2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>PPG00_02_04_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>PPG08_10_12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>PPG16_18_20_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>QPRC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>QPRC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>QPRC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>QPRC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>SD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>SWDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>TIM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>USB0_HOST_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>USB0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>USB1_HDMICEC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>USB1_HOST_HDMICEC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>WC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>WFG0_DTIF0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>WFG1_DTIF1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>WFG2_DTIF2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s6e2cc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(RESET)
</UL>
<P><STRONG><a name="[166]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_s6e2cc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[270]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, system_s6e2cc.o(.text), UNUSED)

<P><STRONG><a name="[8e]"></a>SystemInit</STRONG> (Thumb, 150 bytes, Stack size 12 bytes, system_s6e2cc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s6e2cc.o(.text)
</UL>
<P><STRONG><a name="[13f]"></a>__aeabi_uldivmod</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, lludivv7m.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_rms_q31
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_sdiv
</UL>

<P><STRONG><a name="[271]"></a>_ll_udiv</STRONG> (Thumb, 238 bytes, Stack size 48 bytes, lludivv7m.o(.text), UNUSED)

<P><STRONG><a name="[e2]"></a>__aeabi_llsl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_shift_q31
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_biquad_cas_df1_32x64_q31
</UL>

<P><STRONG><a name="[272]"></a>_ll_shift_l</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[f1]"></a>__aeabi_lasr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_lms_norm_q31
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_biquad_cascade_df1_q31
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_divide_q31
</UL>

<P><STRONG><a name="[273]"></a>_ll_sshift_r</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[f0]"></a>__aeabi_ldivmod</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsdiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_divide_q31
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_mean_q31
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_mse_q31
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_mse_q15
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_var_q31
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_var_q15
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_std_q31
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_std_q15
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_rms_q15
</UL>

<P><STRONG><a name="[15f]"></a>_ll_sdiv</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, llsdiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[151]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_selection_sort_f32
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_quick_sort_f32
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_merge_sort_f32
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_insertion_sort_f32
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_heap_sort_f32
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_bubble_sort_f32
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_bitonic_sort_f32
</UL>

<P><STRONG><a name="[274]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[275]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[276]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[fc]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_lms_norm_init_q15
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_lms_init_q15
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_iir_lattice_init_q15
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fir_sparse_init_q7
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fir_sparse_init_q15
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fir_lattice_init_q15
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fir_interpolate_init_q15
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fir_init_q7
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fir_init_q15
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fir_decimate_init_q15
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_biquad_cascade_df1_init_q15
</UL>

<P><STRONG><a name="[160]"></a>__rt_memclr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[277]"></a>_memset</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[f8]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fir_init_f32
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_lms_norm_init_q31
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_lms_norm_init_f32
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_lms_init_q31
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_lms_init_f32
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_iir_lattice_init_q31
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_iir_lattice_init_f32
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fir_sparse_init_q31
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fir_sparse_init_f32
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fir_lattice_init_q31
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fir_lattice_init_f32
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fir_interpolate_init_q31
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fir_interpolate_init_f32
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fir_init_q31
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fir_init_f64
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fir_decimate_init_q31
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fir_decimate_init_f32
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_biquad_cascade_stereo_df2T_init_f32
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_biquad_cascade_df2T_init_f64
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_biquad_cascade_df2T_init_f32
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_biquad_cascade_df1_init_q31
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_biquad_cascade_df1_init_f32
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_biquad_cas_df1_32x64_init_q31
</UL>

<P><STRONG><a name="[278]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[279]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[161]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[27a]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[27b]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[27c]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[162]"></a>__read_errno</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, _rserrno.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>

<P><STRONG><a name="[164]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_logf
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_expf
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
</UL>

<P><STRONG><a name="[163]"></a>__aeabi_errno_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>

<P><STRONG><a name="[27d]"></a>__errno$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[27e]"></a>__rt_errno_addr$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[27f]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[165]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[280]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[97]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[9c]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[a0]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[281]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[282]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[16e]"></a>__ARM_fpclassify</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, fpclassify.o(i.__ARM_fpclassify), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
</UL>

<P><STRONG><a name="[283]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[172]"></a>__ARM_fpclassifyf</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, fpclassifyf.o(i.__ARM_fpclassifyf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_expf
</UL>

<P><STRONG><a name="[e8]"></a>__hardfp_exp</STRONG> (Thumb, 714 bytes, Stack size 72 bytes, exp.o(i.__hardfp_exp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_vexp_f64
</UL>

<P><STRONG><a name="[e6]"></a>__hardfp_expf</STRONG> (Thumb, 426 bytes, Stack size 16 bytes, expf.o(i.__hardfp_expf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_underflow
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_overflow
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassifyf
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_vexp_f32
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_logsumexp_f32
</UL>

<P><STRONG><a name="[284]"></a>__mathlib_expf</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, expf.o(i.__hardfp_expf), UNUSED)

<P><STRONG><a name="[d8]"></a>__hardfp_fabs</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, fabs.o(i.__hardfp_fabs), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_abs_f64
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_absmin_no_idx_f64
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_absmax_no_idx_f64
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_absmin_f64
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_absmax_f64
</UL>

<P><STRONG><a name="[b2]"></a>__hardfp_log</STRONG> (Thumb, 872 bytes, Stack size 88 bytes, log.o(i.__hardfp_log))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = __hardfp_log &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCoefficient
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_vlog_f64
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_kullback_leibler_f64
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_entropy_f64
</UL>

<P><STRONG><a name="[ea]"></a>__hardfp_logf</STRONG> (Thumb, 320 bytes, Stack size 8 bytes, logf.o(i.__hardfp_logf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_divzero
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_vlog_f32
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_logsumexp_f32
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_kullback_leibler_f32
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_entropy_f32
</UL>

<P><STRONG><a name="[285]"></a>__mathlib_logf</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, logf.o(i.__hardfp_logf), UNUSED)

<P><STRONG><a name="[af]"></a>__hardfp_sqrt</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, sqrt.o(i.__hardfp_sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NormalizationFactor
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_std_f64
</UL>

<P><STRONG><a name="[16d]"></a>__kernel_poly</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
</UL>

<P><STRONG><a name="[174]"></a>__mathlib_dbl_divzero</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_divzero))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_divzero &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
</UL>

<P><STRONG><a name="[168]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __mathlib_dbl_infnan &rArr; __aeabi_dadd
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
</UL>

<P><STRONG><a name="[173]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_invalid &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
</UL>

<P><STRONG><a name="[169]"></a>__mathlib_dbl_overflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_overflow), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
</UL>

<P><STRONG><a name="[16a]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_underflow), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
</UL>

<P><STRONG><a name="[177]"></a>__mathlib_flt_divzero</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_divzero), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_logf
</UL>

<P><STRONG><a name="[170]"></a>__mathlib_flt_infnan</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_infnan), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_logf
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_expf
</UL>

<P><STRONG><a name="[176]"></a>__mathlib_flt_invalid</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_invalid), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_logf
</UL>

<P><STRONG><a name="[171]"></a>__mathlib_flt_overflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_overflow), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_expf
</UL>

<P><STRONG><a name="[16f]"></a>__mathlib_flt_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_underflow), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_expf
</UL>

<P><STRONG><a name="[de]"></a>__aeabi_dneg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, basic.o(x$fpl$basic))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_negate_f64
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_kullback_leibler_f64
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_entropy_f64
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
</UL>

<P><STRONG><a name="[286]"></a>_dneg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[287]"></a>__aeabi_fneg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[288]"></a>_fneg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[289]"></a>_dabs</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[28a]"></a>_fabs</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[ac]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCoefficient
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NormalizationFactor
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transform
</UL>

<P><STRONG><a name="[179]"></a>_d2f</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[da]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_offset_f64
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_dot_prod_f64
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_add_f64
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fir_f64
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_correlate_f64
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_biquad_cascade_df2T_f64
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_power_f64
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_mean_f64
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_kullback_leibler_f64
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_entropy_f64
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_mse_f64
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_var_f64
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
</UL>

<P><STRONG><a name="[17c]"></a>_dadd</STRONG> (Thumb, 332 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
</UL>

<P><STRONG><a name="[181]"></a>__fpl_dcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dcmpi.o(x$fpl$dcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL>

<P><STRONG><a name="[ab]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCoefficient
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transform
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_mean_f64
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_kullback_leibler_f64
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_mse_f64
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_var_f64
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
</UL>

<P><STRONG><a name="[17f]"></a>_ddiv</STRONG> (Thumb, 552 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[175]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, deqf.o(x$fpl$deqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_cdcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
</UL>

<P><STRONG><a name="[180]"></a>_dcmpeq</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, deqf.o(x$fpl$deqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>

<P><STRONG><a name="[16b]"></a>__aeabi_d2iz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
</UL>

<P><STRONG><a name="[182]"></a>_dfix</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[aa]"></a>__aeabi_i2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transform
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
</UL>

<P><STRONG><a name="[28b]"></a>_dflt</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[b3]"></a>__aeabi_ui2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCoefficient
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_mean_f64
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_mse_f64
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_var_f64
</UL>

<P><STRONG><a name="[28c]"></a>_dfltu</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu), UNUSED)

<P><STRONG><a name="[134]"></a>__aeabi_cdcmple</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_max_no_idx_f64
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_max_f64
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_absmax_no_idx_f64
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_absmax_f64
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
</UL>

<P><STRONG><a name="[183]"></a>_dcmple</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>

<P><STRONG><a name="[186]"></a>__fpl_dcmple_InfNaN</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drcmple
</UL>

<P><STRONG><a name="[b4]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_scale_f64
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_mult_f64
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_dot_prod_f64
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCoefficient
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_fir_f64
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_correlate_f64
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_biquad_cascade_df2T_f64
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_power_f64
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_kullback_leibler_f64
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_entropy_f64
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_mse_f64
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_var_f64
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
</UL>

<P><STRONG><a name="[184]"></a>_dmul</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[17b]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __fpl_dnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[17e]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[139]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_min_no_idx_f64
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_min_f64
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_absmin_no_idx_f64
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_absmin_f64
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
</UL>

<P><STRONG><a name="[185]"></a>_drcmple</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmple_InfNaN
</UL>

<P><STRONG><a name="[16c]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
</UL>

<P><STRONG><a name="[187]"></a>_drsb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[178]"></a>_dsqrt</STRONG> (Thumb, 404 bytes, Stack size 24 bytes, dsqrt_umaal.o(x$fpl$dsqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>

<P><STRONG><a name="[e4]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_sub_f64
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_mse_f64
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_var_f64
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_exp
</UL>

<P><STRONG><a name="[189]"></a>_dsub</STRONG> (Thumb, 464 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[ae]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCoefficient
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NormalizationFactor
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT
</UL>

<P><STRONG><a name="[18a]"></a>_f2d</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
</UL>

<P><STRONG><a name="[18b]"></a>__fpl_fnaninf</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, fnaninf.o(x$fpl$fnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_sfrom_f
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
</UL>

<P><STRONG><a name="[95]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[28d]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[28e]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[17a]"></a>__fpl_fretinf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fretinf.o(x$fpl$fretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[15e]"></a>__aeabi_f2lz</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, ffixll.o(x$fpl$llsfromf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_float_to_q31
</UL>

<P><STRONG><a name="[18c]"></a>_ll_sfrom_f</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, ffixll.o(x$fpl$llsfromf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[d3]"></a>__NVIC_ClearPendingIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, i2s.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PRGCRC_I2S_IRQHandler
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2s_set_callback
</UL>

<P><STRONG><a name="[d6]"></a>__NVIC_ClearPendingIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, dstc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dstc_reset
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dstc_set_callback
</UL>

<P><STRONG><a name="[154]"></a>arm_heapify</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, supportfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_heapify
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_heap_sort_f32
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_heapify
</UL>

<P><STRONG><a name="[157]"></a>arm_merge_sort_core_f32</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, supportfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_merge_sort_core_f32
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_merge_sort_f32
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_merge_sort_core_f32
</UL>

<P><STRONG><a name="[159]"></a>arm_quick_sort_core_f32</STRONG> (Thumb, 186 bytes, Stack size 20 bytes, supportfunctions.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_quick_sort_core_f32
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_quick_sort_f32
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_quick_sort_core_f32
</UL>

<P><STRONG><a name="[152]"></a>arm_bitonic_sort_core_f32</STRONG> (Thumb, 136 bytes, Stack size 20 bytes, supportfunctions.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_bitonic_sort_f32
</UL>

<P><STRONG><a name="[188]"></a>_dadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
</UL>

<P><STRONG><a name="[17d]"></a>_dsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
